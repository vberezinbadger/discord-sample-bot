import disnake
from disnake.ext import commands
import asyncio
from datetime import datetime

class Reminders(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.reminders = {}
        self.reminder_tasks = {}

    @commands.slash_command()
    async def remind(self, inter, time: int, *, message: str):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ (–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö)"""
        try:
            if time < 1 or time > 1440:
                return await inter.response.send_message(
                    "‚ö†Ô∏è –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 1440 –º–∏–Ω—É—Ç (24 —á–∞—Å–∞)", 
                    ephemeral=True
                )

            reminder_id = len(self.reminders) + 1
            self.reminders[reminder_id] = {
                'user_id': inter.author.id,
                'channel_id': inter.channel.id,
                'message': message,
                'time': time,
                'created_at': datetime.now()
            }

            await inter.response.send_message(
                f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ #{reminder_id} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!\n"
                f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}\n"
                f"–í—Ä–µ–º—è: —á–µ—Ä–µ–∑ {time} –º–∏–Ω—É—Ç",
                ephemeral=True
            )

            await asyncio.sleep(time * 60)
            
            await inter.channel.send(
                f"üîî {inter.author.mention}, –Ω–∞–ø–æ–º–∏–Ω–∞—é (#{reminder_id}):\n{message}"
            )
            del self.reminders[reminder_id]

        except Exception:
            await inter.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", 
                ephemeral=True
            )

    @commands.slash_command()
    async def list_reminders(self, inter):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
        user_reminders = {
            rid: rem for rid, rem in self.reminders.items() 
            if rem['user_id'] == inter.author.id
        }
        
        if not user_reminders:
            return await inter.response.send_message(
                "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π", 
                ephemeral=True
            )
        
        embed = disnake.Embed(title="üìù –í–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", color=disnake.Color.blue())
        for rid, rem in user_reminders.items():
            embed.add_field(
                name=f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ #{rid}",
                value=f"–ß–µ—Ä–µ–∑ {rem['time']} –º–∏–Ω: {rem['message']}",
                inline=False
            )
        
        await inter.response.send_message(embed=embed, ephemeral=True)

def setup(bot):
    bot.add_cog(Reminders(bot))
