import disnake
from disnake.ext import commands
import os
import asyncio
from datetime import datetime, timedelta

class Reviews(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.main_channel_id = int(os.getenv('REVIEWS_MAIN_CHANNEL'))
        self.reviews_channel_id = int(os.getenv('REVIEWS_CHANNEL'))
        self.category_id = int(os.getenv('REVIEWS_CATEGORY'))
        self.active_review_channels = {}
        self.last_review_time = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–∑—ã–≤–∞
        self.cooldown_hours = 1     # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Å–∞—Ö

    @commands.Cog.listener()
    async def on_ready(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
        channel = self.bot.get_channel(self.main_channel_id)
        if channel:
            # –û—á–∏—â–∞–µ–º –∫–∞–Ω–∞–ª
            await channel.purge()
            
            embed = disnake.Embed(
                title="üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤",
                description=(
                    "–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, "
                    "—á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.\n\n"
                    "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ GIF."
                ),
                color=disnake.Color.blue()
            )
            embed.set_image(url="https://media.discordapp.net/attachments/1234133960939012107/1353743109728637110/image.png?ex=67e2c304&is=67e17184&hm=616fc432d2a6ae8a629378156f621056e01e1f48e651a8dc79046a966adf98b4&=&format=webp&quality=lossless&width=1200&height=800")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É –∫–∞—Ä—Ç–∏–Ω–∫—É
            
            await channel.send(
                embed=embed,
                components=[
                    disnake.ui.Button(
                        style=disnake.ButtonStyle.primary,
                        label="–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤",
                        custom_id="create_review"
                    )
                ]
            )

    @commands.Cog.listener()
    async def on_button_click(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id == "create_review":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–∑—ã–≤–∞
            last_time = self.last_review_time.get(inter.author.id)
            if last_time:
                time_passed = datetime.now() - last_time
                if time_passed < timedelta(hours=self.cooldown_hours):
                    time_left = timedelta(hours=self.cooldown_hours) - time_passed
                    hours = time_left.seconds // 3600
                    minutes = (time_left.seconds % 3600) // 60
                    return await inter.response.send_message(
                        f"‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ "
                        f"{hours} —á. {minutes} –º–∏–Ω.",
                        ephemeral=True
                    )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if inter.author.id in self.active_review_channels:
                return await inter.response.send_message(
                    "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞!",
                    ephemeral=True
                )

            # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–∑—ã–≤–∞
            overwrites = {
                inter.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                inter.author: disnake.PermissionOverwrite(
                    read_messages=True,
                    send_messages=True,
                    attach_files=True,
                    embed_links=True
                )
            }

            review_channel = await inter.guild.create_text_channel(
                name=f"–æ—Ç–∑—ã–≤-{inter.author.name}",
                category=self.bot.get_channel(self.category_id),
                overwrites=overwrites
            )

            self.active_review_channels[inter.author.id] = review_channel.id

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª –æ—Ç–∑—ã–≤–∞
            embed = disnake.Embed(
                title="‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤",
                description=(
                    "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.\n"
                    "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ GIF.\n\n"
                    "–ö–∞–Ω–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞.\n"
                    "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞'"
                ),
                color=disnake.Color.green()
            )

            await review_channel.send(embed=embed)
            await inter.response.send_message(
                f"–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–∑—ã–≤–∞ —Å–æ–∑–¥–∞–Ω: {review_channel.mention}",
                ephemeral=True
            )

    @commands.Cog.listener()
    async def on_message(self, message: disnake.Message):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª –∫–∞–Ω–∞–ª–æ–º –¥–ª—è –æ—Ç–∑—ã–≤–∞
        if (message.channel.id in self.active_review_channels.values() and 
            not message.author.bot):
            
            if message.content.lower() == "–æ—Ç–º–µ–Ω–∞":
                await message.channel.delete()
                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                self.active_review_channels = {
                    k: v for k, v in self.active_review_channels.items() 
                    if v != message.channel.id
                }
                return

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
            self.last_review_time[message.author.id] = datetime.now()

            # –°–æ–∑–¥–∞—ë–º —ç–º–±–µ–¥ —Å –æ—Ç–∑—ã–≤–æ–º
            embed = disnake.Embed(
                title=f"–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç {message.author.display_name}",
                description=message.content or "_ _",
                color=disnake.Color.blue(),
                timestamp=datetime.now()
            )
            embed.set_footer(text=f"ID: {message.author.id}")
            embed.set_thumbnail(url=message.author.display_avatar.url)

            # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
            reviews_channel = self.bot.get_channel(self.reviews_channel_id)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            files = []
            for attachment in message.attachments:
                files.append(await attachment.to_file())

            review_message = await reviews_channel.send(embed=embed, files=files)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –æ—Ç–∑—ã–≤–∞
            await review_message.add_reaction("üëç")
            await review_message.add_reaction("üëé")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∏ —É–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            thank_embed = disnake.Embed(
                title="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! ‚ù§Ô∏è",
                description="–ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥.",
                color=disnake.Color.green()
            )
            await message.channel.send(embed=thank_embed)
            
            await asyncio.sleep(10)
            await message.channel.delete()
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è
            self.active_review_channels = {
                k: v for k, v in self.active_review_channels.items() 
                if v != message.channel.id
            }

    @commands.Cog.listener()
    async def on_guild_channel_delete(self, channel: disnake.TextChannel):
        """–û—á–∏—â–∞–µ–º –∑–∞–ø–∏—Å—å –æ –∫–∞–Ω–∞–ª–µ –ø—Ä–∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–∏"""
        for user_id, channel_id in list(self.active_review_channels.items()):
            if channel_id == channel.id:
                del self.active_review_channels[user_id]
                break

def setup(bot):
    bot.add_cog(Reviews(bot))
