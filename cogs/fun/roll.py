import disnake
from disnake.ext import commands
import random

class DiceCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command()
    async def roll(self, inter, dice: str = "1d6"):
        """–ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ (—Ñ–æ—Ä–º–∞—Ç: NdM, –≥–¥–µ N - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Å—Ç–µ–π, M - —á–∏—Å–ª–æ –≥—Ä–∞–Ω–µ–π)"""
        try:
            if 'd' not in dice:
                raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
                
            count, sides = map(int, dice.lower().split('d'))
            if count < 1 or sides < 2 or count > 100 or sides > 100:
                raise ValueError("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
            
            results = [random.randint(1, sides) for _ in range(count)]
            total = sum(results)
            
            await inter.response.send_message(
                f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—Ä–æ—Å–∫–∞ {dice}:\n"
                f"–ë—Ä–æ—Å–∫–∏: {', '.join(map(str, results))}\n"
                f"–°—É–º–º–∞: {total}"
            )
        except ValueError:
            await inter.response.send_message(
                "‚ùå –û—à–∏–±–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç NdM (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2d6)"
            )

    @commands.slash_command()
    async def coin(self, inter):
        """–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É"""
        result = random.choice(["–û—Ä—ë–ª", "–†–µ—à–∫–∞"])
        await inter.response.send_message(f"ü™ô {result}!")

def setup(bot):
    bot.add_cog(DiceCommands(bot))
